version: '3.8'
networks:
  web:
    external: false

services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
  

  reverse-proxy:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=tylersgilman@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--ping=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    image: tylergilman/tylergilman:latest
    deploy:
      mode: replicated
      replicas: 3
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`tylergilman.com`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"  # Fixed router name
      - "traefik.http.services.web.loadbalancer.server.port=8080"  # Added missing port configuration
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - type: bind
        source: ./blog.db
        target: /app/blog.db
      - ./.env:/app/.env
    environment:
      - ENV=production
      - DEV_PORT=8080
    restart: unless-stopped

volumes:
  letsencrypt:
